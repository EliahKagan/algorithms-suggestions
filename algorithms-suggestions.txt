Define and write tests for (warmup):
    a function that prints a vector, of anything printable, on a line.
    a function that sorts a vector of int (can use std::sort).
    a function that sorts a vector of int, but puts all odds before all evens.

Define and write tests for:
    a class template providing an expanding (but not contracting) object pool.

Define and write tests for:
    a singly linked list node type.
    a function that constructs a singly linked list from a vector.
    a function that constructs a vector from a singly linked list.
    a function that checks if a singly linked list has a cycle.

Define and write tests for:
    a binary tree node type (with no back-pointers).
    a helper function to make trees like f(4, f(3, {}}, {}}), f(5, {}}, {}})).
    a function that constructs a vector from a binary tree, in any order.
    preorder, inorder, postorder, and level order traversal (and display).
    iterative preorder traversal.

Define and write tests for:
    a function that detects violations of the tree's topological invariant.

Write functions and/or types that:
    given (undirected, unweighted) edges, build an adjacency list.
    given edges, report of there is a (undirected) cycle.
    given edges and {u, v} queries, report if vertices u and v are connected.
    given edges, report the number and size of components.
    use BFS, DFS, and union-find methods for those tasks (if not already done).
